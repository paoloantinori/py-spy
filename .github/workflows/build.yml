name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build-linux-armv7:
    runs-on: [self-hosted, linux, arm]
    steps:
    - name: Setup python
      run: |
        pyenv global system
        python --version
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test



  build-linux-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [i686-musl, armv7-musleabihf, aarch64-musl, x86_64-musl]
    container:
      image: docker://benfred/rust-musl-cross:${{ matrix.target }}
      env:
        RUSTUP_HOME: /root/.rustup
        CARGO_HOME: /root/.cargo
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: |
        python3 -m pip install --upgrade maturin
        maturin build --release -o dist --target $RUST_MUSL_CROSS_TARGET
        maturin sdist -o dist
    - name: Rename Wheels
      run: |
        python3 -c "import shutil; import glob; wheels = glob.glob('dist/*.whl'); [shutil.move(wheel, wheel.replace('py3', 'py2.py3')) for wheel in wheels if 'py2' not in wheel]"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist


  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Create GitHub Release
        uses: fnkr/github-action-ghr@v1.3
        env:
          GHR_PATH: .
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies
        run: sudo apt install libunwind-dev
        if: runner.os == 'Linux'
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Push to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade wheel pip setuptools twine
          twine upload *
          rm *
      - uses: actions/checkout@v3
      - name: Push to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
